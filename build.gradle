import org.gradle.api.internal.artifacts.mvnsettings.DefaultLocalMavenRepositoryLocator
import org.gradle.api.internal.artifacts.mvnsettings.DefaultMavenFileLocations
import org.gradle.api.internal.artifacts.mvnsettings.DefaultMavenSettingsProvider
import org.gradle.api.internal.artifacts.mvnsettings.LocalMavenRepositoryLocator

apply plugin: 'com.android.library'
apply plugin: 'maven'

group='com.antfin.doom'
version='1.0.3.2'

android {
    compileSdkVersion 28

    defaultConfig {
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        externalNativeBuild {
            cmake {
                abiFilters "armeabi-v7a","x86"
            }
        }
        buildConfigField("String","VERSION","\"$version\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

def mavenLocalRepo = ''

afterEvaluate{
    Task upload = tasks.create('uploadRemote', Upload)
    upload.group = "upload";
    upload.configuration = configurations.findByName('archives')
    DefaultMavenFileLocations locations = new DefaultMavenFileLocations()
    DefaultMavenSettingsProvider provider = new DefaultMavenSettingsProvider(locations)
    LocalMavenRepositoryLocator locator = new DefaultLocalMavenRepositoryLocator(provider)

    mavenLocalRepo = locator.localMavenRepository.absolutePath


    uploadArchives {
        repositories {
            mavenDeployer {
                repository (url: uri(mavenLocalRepo))
            }
        }
    }

    upload.repositories{
        mavenDeployer {
            repository(url: uri("http://mvn.cloud.alipay.com/nexus/content/repositories/releases")) {
                authentication(userName: "xunlong.wxl", password: "wxNgwi9877")
            }
            pom.version = version
            pom.artifactId = project.name
            pom.groupId = group
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
